{"version":3,"sources":["components/NextTimeSelector.js","components/CardDisplay.js","helpers/api.js","components/FileLoaderForm.js","App.js","helpers/utils.js","index.js"],"names":["NextTimeSelector","props","buttonClicked","value2add","setState","prevState","currentOffset","Math","max","state","labelFormatString","onNextTimeSelected","className","onClick","this","replace","Component","CardDisplay","isVisible","console","log","currentQuizItem","question","isAnswerVisible","showA","answer","lineFilterQuizItems","item","trim","length","indexOf","lineFilterQuizList","lineFilterLanguagePairs","arrayToQuizItem","arr","arrayToQuiz","name","url","arrayToLanguagePair","pairName","fileQuizList","getObjectsFromContent","content","fLineFilter","fLineArray2Object","inLineSeparator","lineSeparator","lines","split","objects","filter","map","line","parseQuizItems","lowerCaseName","toLocaleLowerCase","name2inLineSeparator","FileLoaderForm","languagePairs","quizListUrl","quizList","fileUrl","items","loading","langPairChanged","bind","populateLanguagePairs","axios","get","then","response","status","pairsArray","data","alert","catch","error","event","target","value","quizItems","onContentLoaded","qList","style","padding","onChange","e","pair","quizChanged","App","QuizItems","currentQuizItemIndex","currentQuizItemCount","isReady","offset","fromIndex","toIndex","maxItemIndex","element","splice","min","arrayMoveItem","nextIndex","maxPossibleIndex","recalculateVisuals","bShow","onShowInNCards","buttonIKnowClicked","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.60d74742.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./NextTimeSelector.css\";\r\n\r\nclass NextTimeSelector extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      currentOffset: 5, // in 5 cards or days\r\n      labelFormatString: props.labelFormatString,\r\n      onNextTimeSelected: props.onNextTimeSelected,\r\n      // onButtonClickHandler: props.buttonClicked,\r\n      // quizName: \"My Quiz\",\r\n      // quizQuestionFontsize: \"40\",\r\n      // quizAnswerFontsize: \"35\",\r\n      // quizQuestionCode: \"en-US\",\r\n      // quizAnswerCode: \"ru-RU\",\r\n      // isButtonDisabled: false,\r\n    };\r\n  }\r\n\r\n  buttonClicked = (value2add) => {\r\n    //console.log(`App: buttonClicked: ${string2add}`); // `${string2add}\\r\\n${this.state.fileContent}`,\r\n    this.setState((prevState, props) => {\r\n      return {\r\n        currentOffset: Math.max(1, prevState.currentOffset + value2add),\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"buttonContainer\">\r\n        <button onClick={() => this.buttonClicked(-5)}>&lt;&lt;</button>\r\n        <button onClick={() => this.buttonClicked(-1)}>&lt;</button>\r\n        <button\r\n          onClick={() =>\r\n            this.state.onNextTimeSelected(this.state.currentOffset)\r\n          }\r\n        >\r\n          {this.state.labelFormatString.replace(\"%d\", this.state.currentOffset)}\r\n        </button>\r\n        <button onClick={() => this.buttonClicked(+1)}>&gt;</button>\r\n        <button onClick={() => this.buttonClicked(+5)}>&gt;&gt;</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NextTimeSelector;\r\n","import React, { Component } from \"react\";\r\nimport \"./CardDisplay.css\";\r\n\r\nclass CardDisplay extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isVisible: false, //just dummy\r\n      //   quizItem: props.currentQuizItem,\r\n      //   currentQuizItemIndex: props.currentQuizItemIndex,\r\n      //   //currentOffset: 5, // in 5 cards or days\r\n      //   //labelFormatString: props.labelFormatString,\r\n      //   // onButtonClickHandler: props.buttonClicked,\r\n      //   // quizName: \"My Quiz\",\r\n      //   // quizQuestionFontsize: \"40\",\r\n      //   // quizAnswerFontsize: \"35\",\r\n      //   // quizQuestionCode: \"en-US\",\r\n      //   // quizAnswerCode: \"ru-RU\",\r\n      //   // isButtonDisabled: false,\r\n    };\r\n    console.log(this.props);\r\n  }\r\n\r\n  //   buttonClicked = (value2add) => {\r\n  //     //console.log(`App: buttonClicked: ${string2add}`); // `${string2add}\\r\\n${this.state.fileContent}`,\r\n  //     this.setState((prevState, props) => {\r\n  //       return {\r\n  //         currentOffset: Math.max(1, prevState.currentOffset + value2add),\r\n  //       };\r\n  //     });\r\n  //   };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"CardDisplayArea\">\r\n        <div className=\"CardQuestion display-linebreak\">\r\n          {this.props.currentQuizItem.question}\r\n        </div>\r\n        <hr />\r\n        <div className=\"CardAnswer display-linebreak\">\r\n          {!this.props.isAnswerVisible && (\r\n            <button\r\n              onClick={() => this.props.showA(!this.props.isAnswerVisible)}\r\n            >\r\n              Answer\r\n            </button>\r\n          )}\r\n          {this.props.isAnswerVisible && this.props.currentQuizItem.answer}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CardDisplay;\r\n","//import api from './helpers/api.js'\r\n\r\n//line filtering functions:\r\nconst lineFilterQuizItems = (item) =>\r\n  item.trim().length !== 0 && item.indexOf(\"quiz.properties\") < 0;\r\n\r\nconst lineFilterQuizList = (item) =>\r\n  item.trim().length !== 0 &&\r\n  item.indexOf(\".htm\") < 0 && //quiz name should not contain .htm!!!\r\n  item.indexOf(\"|\") >= 0;\r\n\r\nconst lineFilterLanguagePairs = (item) =>\r\n  item.trim().length !== 0 &&\r\n  item.indexOf(\".htm\") < 0 && //quiz name should not contain .htm!!!\r\n  item.indexOf(\"|\") >= 0;\r\n\r\n//line to array functions:\r\nconst arrayToQuizItem = (arr) => {\r\n  return {\r\n    question: arr[0].trim().replace(/~~/g, \"\\n\"),\r\n    answer: arr[1].trim().replace(/~~/g, \"\\n\"),\r\n  };\r\n};\r\n\r\nconst arrayToQuiz = (arr) => {\r\n  return {\r\n    name: arr[0].trim(),\r\n    url: arr[1].trim(),\r\n  };\r\n};\r\n\r\nconst arrayToLanguagePair = (arr) => {\r\n  return {\r\n    pairName: arr[0].trim(),\r\n    fileQuizList: arr[1].trim(),\r\n  };\r\n};\r\n\r\nexport const getObjectsFromContent = (\r\n  content,\r\n  fLineFilter,\r\n  fLineArray2Object,\r\n  inLineSeparator = \"|\",\r\n  lineSeparator = \"\\n\"\r\n) => {\r\n  //content is either PSV, CSV\r\n  //b = (typeof b !== 'undefined') ?  b : 1 //this is protection from undefined params\r\n  var lines = content.split(lineSeparator);\r\n  lines = lines.filter(fLineFilter);\r\n  lines = lines.filter((item) => item.indexOf(inLineSeparator) >= 0); //\"|\"\r\n\r\n  //console.log(lines);\r\n\r\n  var objects = lines.map((line) => {\r\n    const arr = line.split(inLineSeparator);\r\n    return fLineArray2Object(arr);\r\n  });\r\n  //console.log(objects);\r\n  return objects;\r\n};\r\n\r\nconst name2inLineSeparator = (name) => {\r\n  const lowerCaseName = name.toLocaleLowerCase(); //Turkish https://stackoverflow.com/questions/8993773/contains-case-insensitive\r\n  if (lowerCaseName.indexOf(\".psv.\") >= 0) return \"|\";\r\n  if (lowerCaseName.indexOf(\".csv.\") >= 0) return \",\";\r\n  console.log(\"File name does not appear to be CSV or PSV, assuming PSV\");\r\n  return \"|\";\r\n};\r\n\r\nexport const parseQuizItems = (name, content) => {\r\n  //   return [\r\n  //     { question: \"What is table?\", answer: \"Стол\" },\r\n  //     { question: \"What is chair?\", answer: \"Стул\" },\r\n  //     { question: \"What is flower?\", answer: \"Цветок\" },\r\n  //     { question: \"window\", answer: \"окно\" },\r\n  //   ];\r\n  return getObjectsFromContent(\r\n    content,\r\n    lineFilterQuizItems,\r\n    arrayToQuizItem,\r\n    name2inLineSeparator(name)\r\n  );\r\n};\r\n\r\nexport const parseQuizList = (content) => {\r\n  //   return [\r\n  //     { name: \"What is table?\", url: \"Стол\" },\r\n  //   ];\r\n  return getObjectsFromContent(content, lineFilterQuizList, arrayToQuiz);\r\n};\r\n\r\nexport const parseFrontBackLanguages = (content) => {\r\n  // return [\r\n  //   {\r\n  //     pairName: \"English(US)-Russian(RU)\",\r\n  //     fileQuizList: \"en-us_ru-ru.psv.txt\",\r\n  //   },\r\n  //   {\r\n  //     pairName: \"English(US)-English(US)\",\r\n  //     fileQuizList: \"en-us_en-us.psv.txt\",\r\n  //   },\r\n  // ];\r\n  return getObjectsFromContent(\r\n    content,\r\n    lineFilterLanguagePairs,\r\n    arrayToLanguagePair\r\n  );\r\n};\r\n\r\n// export const parseFrontBackLanguages2 = (content) => {\r\n//   // return [\r\n//   //   {\r\n//   //     pairName: \"English(US)-Russian(RU)\",\r\n//   //     fileQuizList: \"en-us_ru-ru.psv.txt\",\r\n//   //   },\r\n//   //   {\r\n//   //     pairName: \"English(US)-English(US)\",\r\n//   //     fileQuizList: \"en-us_en-us.psv.txt\",\r\n//   //   },\r\n//   // ];\r\n\r\n//   const lines = content.split(\"\\r\\n\");\r\n//   //console.log(lines);\r\n\r\n//   var quizItems = lines.map((line) => {\r\n//     const arr = line.split(\"|\");\r\n//     return {\r\n//       pairName: arr[0],\r\n//       fileQuizList: arr[1],\r\n//     };\r\n//   });\r\n\r\n//   quizItems = quizItems.filter((item) => item.fileQuizList.indexOf(\"htm\") < 0);\r\n\r\n//   return quizItems;\r\n// };\r\n\r\n//const splitStr = \"\\n\"; // \"\\r\\n\"; sometimes \\n sometimes \\r\\n\r\n\r\n// export const getQuizItems = (quizId) => {\r\n//   const content =\r\n//     \"Ant|муравей\\nAntelope|антилопа\\nBadger|барсук\\nBat|летучая мышь\\nBear|медведь\\nBeaver|бобер\\nBee|пчела\\nBeetle|жук\";\r\n\r\n//   return parseQuizItems(content);\r\n// };\r\n\r\n// export const parseQuizItems2 = (content) => {\r\n\r\n//   var lines = content.split(splitStr);\r\n//   lines = lines.filter(\r\n//     (item) =>\r\n//       item.trim().length !== 0 &&\r\n//       item.indexOf(\"quiz.properties\") < 0 &&\r\n//       item.indexOf(\"|\") >= 0\r\n//   ); //remove empty strings\r\n\r\n//   console.log(lines);\r\n\r\n//   var quizItems = lines.map((line) => {\r\n//     const arr = line.split(\"|\");\r\n//     return {\r\n//       question: arr[0].trim().replace(/~~/g, \"\\n\"),\r\n//       answer: arr[1].trim().replace(/~~/g, \"\\n\"),\r\n//     };\r\n//   });\r\n\r\n//   // quizItems = quizItems.filter(\r\n//   //   (item) => item.question.indexOf(\"quiz.properties\") < 0\r\n//   // );\r\n//   console.log(quizItems);\r\n\r\n//   //const withLineBreaks = quizItems.map((number) => number * 2);\r\n\r\n//   return quizItems;\r\n// };\r\n\r\n// export const parseQuizList2 = (content) => {\r\n//   //   return [\r\n//   //     { name: \"What is table?\", url: \"Стол\" },\r\n//   //   ];\r\n//   const lines = content.split(\"\\r\\n\");\r\n//   //console.log(lines);\r\n\r\n//   var quizItems = lines.map((line) => {\r\n//     const arr = line.split(\"|\");\r\n\r\n//     return {\r\n//       name: arr[0],\r\n//       url: arr[1],\r\n//     };\r\n//   });\r\n\r\n//   quizItems = quizItems.filter((item) => item.url.indexOf(\"htm\") < 0);\r\n//   return quizItems;\r\n// };\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  // getQuizItems,\r\n  parseQuizItems,\r\n  parseQuizList,\r\n  parseFrontBackLanguages,\r\n} from \"../helpers/api.js\";\r\n\r\nconst QUIZLIST_BASE_URL =\r\n  \"https://raw.githubusercontent.com/jwidht/LBH-Catalogue/master/\"; //en-us_ru-ru.psv.txt\r\n// const QUIZ_BASE_URL =\r\n//   \"https://raw.githubusercontent.com/jwidht/En-US_Ru-RU/master/\"; //Animals.psv.txt\r\nclass FileLoaderForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      languagePairs: [], //parseFrontBackLanguages(\"sd\"),\r\n      quizListUrl: \"\", // QUIZLIST_BASE_URL + \"en-us_ru-ru.psv.txt\",\r\n      quizList: [],\r\n      fileUrl:\r\n        \"https://raw.githubusercontent.com/jwidht/En-US_Ru-RU/master/Animals.psv.txt\",\r\n      items: [],\r\n      loading: true,\r\n    };\r\n\r\n    this.langPairChanged.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.populateLanguagePairs();\r\n  }\r\n  populateLanguagePairs() {\r\n    axios\r\n      .get(\r\n        \"https://raw.githubusercontent.com/jwidht/LBH-Catalogue/master/bylanguage.psv.txt\"\r\n      )\r\n      .then((response) => {\r\n        //console.log(response);\r\n        if (response.status !== 200) {\r\n          alert(\"Error loading file from this url\");\r\n          return;\r\n        }\r\n        const pairsArray = parseFrontBackLanguages(response.data);\r\n        //this.state.languagePairs = pairsArray;\r\n        this.setState({ languagePairs: pairsArray });\r\n        //this.props.onContentLoaded(response.data);\r\n        //const response = result.data;\r\n        //this.setState({ trips: response, loading: false });\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n        alert(error);\r\n      });\r\n  }\r\n\r\n  quizChanged(event) {\r\n    if (event.target.value === \"0\") return; // - select -\r\n    const fileUrl = event.target.value;\r\n    console.log(\"loading \" + fileUrl);\r\n    this.setState({ fileUrl: fileUrl });\r\n\r\n    axios\r\n      .get(fileUrl)\r\n      .then((response) => {\r\n        //console.log(response);\r\n        if (response.status !== 200) {\r\n          alert(\"Error loading file from this url\");\r\n          return;\r\n        }\r\n        //console.log(response.data);\r\n        const quizItems = parseQuizItems(fileUrl, response.data);\r\n        this.props.onContentLoaded(quizItems);\r\n        //const response = result.data;\r\n        //this.setState({ trips: response, loading: false });\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n        alert(error);\r\n      });\r\n  }\r\n\r\n  langPairChanged(event) {\r\n    //console.log(event.target.value);\r\n    if (event.target.value === \"0\") return; // - select -\r\n    const quizListFileName = event.target.value;\r\n    const url = QUIZLIST_BASE_URL + quizListFileName;\r\n    //console.log(url);\r\n    this.setState({ quizListUrl: url });\r\n    //console.log(\"this.state.quizListUrl=\" + this.state.quizListUrl); //not set for ?\r\n    // console.log(\r\n    //   \"loading \" + quizListFileName + \" from \" + this.state.quizListUrl\r\n    // );\r\n\r\n    axios\r\n      .get(url)\r\n      .then((response) => {\r\n        //console.log(response);\r\n        if (response.status !== 200) {\r\n          alert(\"Error loading quizListUrl file from this url\");\r\n          return;\r\n        }\r\n        const qList = parseQuizList(response.data);\r\n        //console.log(qList);\r\n        this.setState({ quizList: qList });\r\n        //this.props.onContentLoaded(response.data);\r\n        //const response = result.data;\r\n        //this.setState({ trips: response, loading: false });\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n        alert(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ padding: 5 }}>\r\n        {/* , borderBottom: \"black solid 1px\" */}\r\n        <div>\r\n          <p>Select flashcard front and back languages:</p>\r\n          <select onChange={(e) => this.langPairChanged(e)}>\r\n            <option key={-1} value={0}>\r\n              - Select -\r\n            </option>\r\n            {this.state.languagePairs.map((pair) => (\r\n              <option key={pair.pairName} value={pair.fileQuizList}>\r\n                {pair.pairName}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div>\r\n          <p>Select flashcard set:</p>\r\n          <select onChange={(e) => this.quizChanged(e)}>\r\n            <option key={-1} value={0}>\r\n              - Select -\r\n            </option>\r\n            {this.state.quizList.map((pair) => (\r\n              <option key={pair.name} value={pair.url}>\r\n                {pair.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          {/* {this.state.quizListUrl} */}\r\n          {/* <input type=\"text\" value={this.state.fileUrl} />\r\n        <button onClick={() => this.populateData()}>Load</button> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FileLoaderForm;\r\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport NextTimeSelector from \"./components/NextTimeSelector.js\";\nimport CardDisplay from \"./components/CardDisplay.js\";\n\nimport { arrayMoveItem } from \"./helpers/utils.js\";\nimport FileLoaderForm from \"./components/FileLoaderForm.js\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      QuizItems: [], // getQuizItems(1),\n      currentQuizItemIndex: 0,\n      currentQuizItemCount: 0,\n      currentQuizItem: { question: \"\", answer: \"\" },\n      isAnswerVisible: false, //if the answer visible\n      isReady: false, //true when data loaded, set to false when array is empty\n    };\n    //console.log(this.state.QuizItems);\n    // if (this.state.QuizItems !== null) {\n    //   this.state.currentQuizItemCount = this.state.QuizItems.length;\n    // }\n    // if (this.state.currentQuizItemCount > 0)\n    //   this.state.currentQuizItem =\n    //     this.state.QuizItems[this.state.currentQuizItemIndex];\n\n    //console.log(this.state);\n\n    //this.onShowInNCards.bind(this);\n    //this.showA.bind(this);\n  }\n\n  onShowInNCards(offset) {\n    this.setState({ isAnswerVisible: false }); //turn off the answer pane first\n\n    arrayMoveItem(\n      this.state.QuizItems,\n      this.state.currentQuizItemIndex,\n      this.state.currentQuizItemIndex + offset\n    );\n    //console.log(this.state.QuizItems);\n    const nextIndex = this.state.currentQuizItemIndex; // + 1;\n    //console.log(nextIndex);\n    const maxPossibleIndex = this.state.QuizItems.length - 1;\n    //console.log(size);\n    const currentQuizItemIndex = Math.min(nextIndex, maxPossibleIndex);\n    // this.setState({\n    //   currentQuizItemIndex: currentQuizItemIndex,\n    //   currentQuizItem: this.state.QuizItems[currentQuizItemIndex],\n    // });\n    this.recalculateVisuals(currentQuizItemIndex);\n  }\n\n  buttonIKnowClicked() {\n    if (this.state.QuizItems.length === 0) {\n      alert(\"No items to study\");\n      return;\n    }\n    this.state.QuizItems.splice(this.state.currentQuizItemIndex, 1); //remove item\n    const maxPossibleIndex = this.state.QuizItems.length - 1;\n    if (this.state.currentQuizItemIndex > maxPossibleIndex) {\n      //finish quiz\n      this.setState({\n        isReady: false,\n      });\n      alert(\"No more items left\");\n      return;\n    }\n    this.recalculateVisuals(this.state.currentQuizItemIndex);\n  }\n\n  recalculateVisuals(currentQuizItemIndex) {\n    //re-set all watched variables\n    this.setState({\n      currentQuizItemIndex: currentQuizItemIndex,\n      currentQuizItem: this.state.QuizItems[currentQuizItemIndex],\n      currentQuizItemCount: this.state.QuizItems.length,\n      isAnswerVisible: false,\n      isReady: this.state.QuizItems.length > 0,\n    });\n  }\n\n  onShowInNDays(offset) {}\n\n  showA(bShow) {\n    //console.log(this.state);\n    //const isVisible = this.state.isAnswerVisible;\n    //console.log(isVisible);\n    this.setState({ isAnswerVisible: bShow });\n  }\n\n  onContentLoaded(quizItems) {\n    this.setState({ QuizItems: quizItems });\n    //console.log(this.state.QuizItems);\n    this.recalculateVisuals(0);\n  }\n\n  render() {\n    return (\n      <div className=\"entireScreen\">\n        <div className=\"ControlPanel\">\n          <div className=\"ControlPanelTop\">\n            <h1 className=\"AppHeader\">LBH-Web Flashcards</h1>\n            <FileLoaderForm\n              onContentLoaded={(content) => this.onContentLoaded(content)}\n            />\n          </div>\n          <div\n            className={\"Toolbar\" + (this.state.isReady ? \"\" : \" disabledDiv\")}\n          >\n            <div className=\"CardNumber\">\n              Cards left: {this.state.currentQuizItemCount}\n            </div>\n\n            <NextTimeSelector\n              labelFormatString=\"In %d Cards\"\n              onNextTimeSelected={(offset) => this.onShowInNCards(offset)}\n            />\n\n            <button onClick={() => this.buttonIKnowClicked()}>\n              I KNOW, DON'T SHOW AGAIN\n            </button>\n            {/* <NextTimeSelector\n              labelFormatString=\"In %d Days\"\n              onNextTimeSelected={(offset) => this.onShowInNDays(offset)}\n              isReady={this.state.isReady}\n            /> */}\n          </div>\n        </div>\n        <CardDisplay\n          currentQuizItem={this.state.currentQuizItem}\n          currentQuizItemIndex={this.state.currentQuizItemIndex}\n          currentQuizItemCount={this.state.currentQuizItemCount}\n          isAnswerVisible={this.state.isAnswerVisible}\n          showA={(bShow) => this.showA(bShow)}\n          // }this.state.QuizItems[this.state.currentQuizItemIndex]\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// import { Children } from 'react';\r\n\r\nexport const defaultStatusFormatter = (current, total) =>\r\n  `${current} of ${total}`;\r\n\r\nexport const arrayMoveItem = (arr, fromIndex, toIndex) => {\r\n  //moves an array item from fromIndex to toIndex\r\n  if (arr.length < 2) return; //0 or 1 item - this makes no sense\r\n  const maxItemIndex = arr.length - 1;\r\n  var element = arr[fromIndex];\r\n  arr.splice(fromIndex, 1); //remove from fromIndex\r\n  arr.splice(Math.min(toIndex, maxItemIndex), 0, element); //insert into toIndex\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}